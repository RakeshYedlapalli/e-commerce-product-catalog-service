version: '3.8'

services:
  spring-ecommerce-catalog-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-ecommerce-catalog-app
    ports:
      - "8082:8082"
    depends_on:
      - postgres
#      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/spring-boot-end-to-end-int
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093

  postgres:
    image: postgres:15
    container_name: e-commerce-postgres
    ports:
      - "5434:5434"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: spring-boot-end-to-end-int
    volumes:
      - postgres-data:/var/lib/postgresql/data

#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.5.0
#    container_name: e-commerce-zookeeper
#    ports:
#      - "2182:2182"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2182
#      ZOOKEEPER_TICK_TIME: 2000

#  kafka:
#    image: confluentinc/cp-kafka:7.5.0
#    container_name: kafka
#    ports:
#      - "9093:9093"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres-data:
